@inherits LayoutComponentBase
@inject ALib.BlazorServerSimpleAuth.SimpleAuthenticationStateProvider Auth
@inject IDialogService DialogService

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        @if (Auth.User != null)
        {
            <MudButton Color="Color.Inherit" EndIcon="@Icons.Material.Outlined.Logout" OnClick="Logout">@Auth.User?.UserName</MudButton>
        }
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/ochiai-naoki/ALib.BlazorSimpleAuth/" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">BlazorServerSample</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async void Logout()
    {
        var result = await DialogService.ShowMessageBox(
            "確認",
            "ログアウトします。",
            cancelText: "キャンセル"
        );
        if (result == true)
        {
            await Auth.LogoutAsync();
        }
        StateHasChanged();
    }
}